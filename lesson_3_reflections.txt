When would you want to use a remote repository rather than keeping all your work local?
    when a large number of developers are working on same project. sharing a remote repository is easier as compared to sharing local repo.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date 
with your remote repository?
	If we don't do it manually, then we might not know what are the changes. 
	
Describe the differences between forks, clones, and branches. When would you use one instead of another?
	fork is when we "copy" a repo from one github account to our github account
	clone is when we download github repo to our local machine
	branches are made on repository while working when we are adding a feature to it that we aren't so sure of

	if my friend has a repo on github :
	first fork it - now my github also has that repo 
	now clone it to local machine
	add, commit
	git push
	
What is the benefit of having a copy of the last known state of the remote stored locally?
	it is highly probable that last known state may also be current state of remote
	
How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
	without git or github, it would be very difficult to collaborate on a team project. The only way 
	would be using just one version of code and everybody editing it. It would be very difficult to go to 
	a previous version if a bug creeps in the code 
	
When would you want to make changes in a separate branch rather than directly in master? 
What benefits does each approach have?
	We should always use a separate branch for making changes as master branch must only be updated by pull 
	in local machine. Everytime we are adding a special feature use a new branch
